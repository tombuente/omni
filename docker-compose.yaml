services:
  bot:
    build: .
    depends_on:
      db:
        condition: service_healthy
        restart: true
    restart: unless-stopped
    stop_signal: SIGINT
    stop_grace_period: 120s
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
      GUILD: ${GUILD}
      DELETE_COMMANDS: ${DELETE_COMMANDS}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  db:
    image: postgres
    restart: unless-stopped
    stop_signal: SIGINT
    stop_grace_period: 120s
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 2s

volumes:
  data:
